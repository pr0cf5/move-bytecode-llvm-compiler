chain:
  # -- Internal: name of the testnet to connect to
  name: testnet
  # -- Bump this number to wipe the underlying storage
  era: 1
  # -- Chain ID
  chain_id: 4

# -- Default image tag to use for all validator and fullnode images
imageTag: devnet

# -- Number of validators to deploy
numValidators: 1
# -- Total number of fullnode groups to deploy
numFullnodeGroups: 1

# -- Specify validator and fullnode NodeConfigs via named ConfigMaps, rather than the generated ones from this chart.
overrideNodeConfig: false

haproxy:
  # -- Enable HAProxy deployment in front of validator and fullnodes
  enabled: true
  # -- Number of HAProxy replicas
  replicas: 1
  image:
    # -- Image repo to use for HAProxy images
    repo: haproxy
    # -- Image tag to use for HAProxy images
    tag: 2.2.14@sha256:36aa98fff27dcb2d12c93e68515a6686378c783ea9b1ab1d01ce993a5cbc73e1
    # -- Image pull policy to use for HAProxy images
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 4
      memory: 8Gi
    requests:
      cpu: 4
      memory: 8Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  limits:
    validator:
      # -- Limit the number of connections per IP address per min
      connectionsPerIPPerMin: 12
      # Sustained 100mb/s for 10 sec.
      maxBytesOutRate10sec: 134217728
      rateLimitSession: 256
      tcpBufSize: 524288

  config:
    # -- Whether to send Proxy Protocol v2
    send_proxy_protocol: &send_proxy_protocol false
  # -- Name of the Kubernetes TLS secret to use for HAProxy
  tls_secret:

validator:
  # -- Internal: name of your validator for use in labels
  name:
  image:
    # -- Image repo to use for validator images
    repo: aptoslabs/validator
    # -- Image tag to use for validator images. If set, overrides `imageTag`
    tag:
    # -- Image pull policy to use for validator images
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 15.5
      memory: 26Gi
    requests:
      cpu: 15
      memory: 26Gi
  storage:
    # -- Kubernetes storage class to use for validator persistent storage
    class:
    # -- Size of validator persistent storage
    size: 2048Gi
  # -- Log level for the validator
  rust_log: info
  # -- Address for remote logging. See `logger` helm chart
  remoteLogAddress:
  # -- Flag to force enable telemetry service (useful for forge tests)
  force_enable_telemetry: false
  nodeSelector: {}
  tolerations: []
  affinity: {}
  # -- Validator configuration. See NodeConfig https://github.com/aptos-labs/aptos-core/blob/main/config/src/config/mod.rs
  config: {}

  # -- Lock down network ingress and egress with Kubernetes NetworkPolicy
  enableNetworkPolicy: true

fullnode:
  # -- Specify fullnode groups by `name` and number of `replicas`
  groups:
    - name: fullnode
      replicas: 1
  resources:
    limits:
      cpu: 15.5
      memory: 26Gi
    requests:
      cpu: 15
      memory: 26Gi
  storage:
    # -- Kubernetes storage class to use for fullnode persistent storage
    class:
    # -- Size of fullnode persistent storage
    size: 2048Gi
  # -- Log level for the fullnode
  rust_log: info
  # -- Flag to force enable telemetry service (useful for forge tests)
  force_enable_telemetry: false
  nodeSelector: {}
  tolerations: []
  affinity: {}
  # -- Fullnode configuration. See NodeConfig https://github.com/aptos-labs/aptos-core/blob/main/config/src/config/mod.rs
  config:
    # This full_node_networks config block allows changing only the below parameters for public fullnode networks
    # The rest of the configs are inherited from fullnode-base.yaml
    # Arrays in helm are immutable, so we fall back to string templating
    full_node_networks:
      # The first item in the array `full_node_networks` must always refer to the public fullnode network
      - network_id: "public"
        max_inbound_connections: 100
        seeds: {}
    mempool:
      shared_mempool_max_concurrent_inbound_syncs: 16 # default 4
      max_broadcasts_per_peer: 4 # default 1
      default_failovers: 0 # default 3
      shared_mempool_batch_size: 200 # default 100
      shared_mempool_tick_interval_ms: 10 # default 50

service:
  # -- If set, the base domain name to use for External DNS
  domain:
  validator:
    external:
      # -- The Kubernetes ServiceType to use for validator's HAProxy
      type: LoadBalancer
    internal:
      # -- The Kubernetes ServiceType to use for validator
      type: ClusterIP
    # -- The externalTrafficPolicy for the validator service
    externalTrafficPolicy: Local
    # -- If set and if the ServiceType is LoadBalancer, allow traffic to validators from these CIDRs
    loadBalancerSourceRanges:
    # -- Enable the REST API on the validator
    enableRestApi: true
    # -- Enable the metrics port on the validator
    enableMetricsPort: true
  fullnode:
    external:
      # -- The Kubernetes ServiceType to use for fullnodes' HAProxy
      type: LoadBalancer
    internal:
      # -- The Kubernetes ServiceType to use for fullnodes
      type: ClusterIP
    # -- The externalTrafficPolicy for the fullnode service
    externalTrafficPolicy: Local
    # -- If set and if the ServiceType is LoadBalancer, allow traffic to fullnodes from these CIDRs
    loadBalancerSourceRanges:
    # -- Enable the REST API on fullnodes
    enableRestApi: true
    # -- Enable the metrics port on fullnodes
    enableMetricsPort: true

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:

# -- LEGACY: create PodSecurityPolicy, which exists at the cluster-level
podSecurityPolicy: true

# -- Load test-data for starting a test network
loadTestGenesis: false

# -- TEST ONLY: Enable running as root for profiling
enablePrivilegedMode: false

pyroscope:
  # -- Enable Pyroscope profiling
  enabled: false
  # -- Secret which contains the Pyroscope API key and other configuration
  secretName: pyroscope

# Additional labels
labels:
